/**
 * GradeParser
 *
 * @description GradeParser
 * @author Untitled
 */

// Import dependencies
const cheerio = require('cheerio');

/**
 * @param {string} text the raw html text captured by CrawlAutomata
 * @returns {Array|boolean} parsed grade data. Each element contains the grade info of the specific term
 * @returns {Array|boolean} data format: [term: {name: {string}, subjects: [{name: {string}, credit: {string}, courseType: {string}, takingType: {string}, grade: {string}, specialReason: {string}, ranking: {string}}]}]
 */
module.exports = (text) => {
  let $ = cheerio.load(text, {
    ignoreWhitespace: true
  });
  let data = [];
  let trs = $('#pf2610 > div > div.portletContent > div > table:nth-child(2) > tbody > tr');

  if(!trs.length) { // Unknown or empty data
    return false;
  }

  // Remove header and convert into Array
  let rows = [];
  [].forEach.call(trs, (value, index) => {
    if(index > 1) {
      rows.push(value);
    }
  });
  let tableLength = rows.length;

  if(!tableLength || $(trs[1]).children().length < 7) { // Unknown or empty data
    return false;
  }

  let term = {
    name: '',
    subjects: []
  };
  rows.forEach((currentRow, index) => {
    if(currentRow.children.length == 1) { // Header detected
      if(term.name != '') {
        data.push(term);
        // Reinitialize
        term = {
          name: '',
          subjects: []
        };
      }
      term.name = currentRow.children[0].children[0].children[0].data;
    } else { // Body detected
      let j = 0;
      let subject = {
        name: '',
        credit: '',
        courseType: '',
        takingType: '',
        grade: '',
        specialReason: '',
        ranking: ''
      };
      for(let field in subject) {
        subject[field] = $($('font', currentRow)[j++]).text().replace(/\s/g, '');
      }
      term.subjects.push(subject);
    }
  });
  if(term.name != '') {
    data.push(term);
  }
  
  return data;
};