/**
 * ElecParser
 *
 * @description :: ElecParser
 * @author      :: 石建森
 */

// Import dependencies
const cheerio = require('cheerio');

/**
 * @param {string} text the raw html text captured by CrawlAutomata
 * @returns {Array|boolean} parsed electricity information
 */
module.exports = (text) => {
  let $ = cheerio.load(text, {
    ignoreWhitespace: true
  });
  let data = {
      payments: [],
      consumptions: []
  };

  let charge_trs = $('#dxgvSubInfo_DXMainTable > tbody > tr');
  let elec_trs = $('#dxgvElec_DXMainTable > tbody > tr');
  if( !charge_trs.length || !elec_trs.length ){ // Unknown or empty data
    return false;
  }

  // Remove header and convert into Array
  let charge_rows = [];
  let elec_rows = [];
  [].forEach.call(charge_trs, (value, index) => {
    if(index > 0) {
      charge_rows.push(value);
    }
  });
  [].forEach.call(elec_trs, (value, index) => {
    if(index > 0) {
      elec_rows.push(value);
    }
  });

  let charge_tableLength = charge_rows.length;
  let elec_tablelength = elec_rows.length;

  if( !charge_tableLength || !elec_tablelength || $(charge_trs[0]).children().length < 5 || $(elec_trs[0]).children().length < 7)  { // Unknown or empty data
    return false;
  }

  charge_rows.forEach((currentRow,index) => {
    let i = 0;
    let charge = {
      roomID: '',
      time: '',
      account: '',
      roomName: '',
      money: ''
    };
    for(let field in charge) {
      charge[field] = $($('td', currentRow)[i++]).text().replace(/(^\s*)|(\s*$)/g, '');
    }
    data.payments.push(charge);
  })

  elec_rows.forEach((currentRow,index) => {
    let j = 0;
    let consumption = {
      date: '',
      paymentUse: '',
      subsidyUse: '',
      sumUse: '',
      paymentBalance: '',
      subsidyBalance: '',
      sumBalance: ''
    };
    for(let field in consumption) {
      consumption[field] = $($('td', currentRow)[j++]).text().replace(/(^\s*)|(\s*$)/g, '');
    }
    data.consumptions.push(consumption);
  })

  return data;
};
