/**
 * CardInterface
 *
 * @description :: CardeInterface
 * @author      :: 石建森
 */

// Import dependencies
const Convention = require('./Convention.js');
const STATUS = Convention.STATUS;
const DATA_TYPE = Convention.DATA_TYPE;
const config = require('./Config.js');
const CrawlAutomata = require('CrawlAutomata.js');
const cheerio = require('cheerio');

/**
 * Some custom functions, codes, or some modules
 * NOTE: This is a node module, variables below are 'static'
 */

/**
 * Capture info
 * getSessionID: ['http://ssfw.xmu.edu.cn/cmstar/index.portal', 'get'],
 * login: ['http://ssfw.xmu.edu.cn/cmstar/userPasswordValidate.portal', 'post'],
 * main: ['http://ssfw.xmu.edu.cn/cmstar/index.portal?.pn=p1201_p3535', 'get']
 */

/**
 * @param {Object} option may contain username and password
 * @param {function} callback callback function. Prototype: function({result})
 */
module.exports = (option, callback) => {
  // Do something here
  // Capture and process data
  var automata = new CrawlAutomata();
  function onError(status) {
    callback({
      status: status || STATUS.SERVER_FAILURE // STATUS.OK == 0
    });
  }
  function onSuccess(data) {
    callback({
      status: STATUS.OK,
      dataType: DATA_TYPE.JSON,
      data: data
    });
  }

  var _user = null; // An instance of User

  automata.states = {
    getSessionID: {
      url: 'http://ids.xmu.edu.cn/authserver/login?service=http%3A%2F%2Fi.xmu.edu.cn%2F',
      method: 'get',
      callback: ((err, res) => {
        if(err || !res.ok) {
          var status = STATUS.SERVER_FAILURE;
          if(err.timeout) {
            sails.log.info('[ Card ] Get session id timeout. ' + err);
            status = STATUS.TIMEOUT;
          } else {
            sails.log.info('[ Card ] Get session id failed. ' + err);
          }
          onError(status);
        } else {
          var $ = cheerio.load(res.text);
          automata.states.login.data.lt = $('#casLoginForm > input[type="hidden"]:nth-child(8)').val();
          automata.states.login.data.execution = $('#casLoginForm > input[type="hidden"]:nth-child(10)').val();
          sails.log.info('[ Card ] Session ID get');
          sails.log.silly(res.text);
          automata.transit('login');
        }
      })
    },

    //可能是用post的
    login: {
      url: 'http://ids.xmu.edu.cn/authserver/login?service=http%3A%2F%2Fi.xmu.edu.cn%2F',
      method: 'post',
      type: 'form',
      data: {
        'username': option.username,
        'password': option.password,
        'lt': 'rua',
        'dllt': 'userNamePasswordLogin',
        'execution': 'rua',
        '_eventId': 'submit',
        'rmShown':'1',
      },
      redirects:1,
      callback: ((err, res) => {
        if((err || !res.ok) && err && err.status != 302) {
          var status = STATUS.SERVER_FAILURE;
          if(err.timeout) {
            sails.log.info('[ Card ] Turn to login page timeout. ' + err);
            status = STATUS.TIMEOUT;
          } else {
            sails.log.info('[ Card ] Turn to login page failed. ' + err);
          }
          onError(status);
        } else {
          if(res.header && res.header['set-cookie'] && res.header['set-cookie'][0]) {
            automata.agent.jar.setCookie(res.header['set-cookie'][0] + ';Domain=i.xmu.edu.cn');
            sails.log.info('[ Card ] Logged in. User: ', option.username);
            sails.log.silly(res.text);

            // Use cache first
            User.findOne({username: option.username}).exec((err, user) => {
              if(err) {
                // Ignore error and capture card data
                automata.transit('iquery');
              } else if(!user) { // New user
                // Create user then capture card data
                sails.log.info('[ Card ] New user: ' + option.username);
                User.create({username: option.username, card: undefined}).exec((err, user) => {
                  _user = user;
                  automata.transit('iquery');
                });
              } else {
                _user = user;
                // sails.log.debug('Updated at: ' + user.updatedAt + '\n' + (new Date() - user.updatedAt));
                if(new Date() - user.updatedAt > config.card.cacheTTL * 1000 || !(user.card)) { // Cache expired or empty data
                  sails.log.info('[ Card ] Cache expired or invalid.');
                  automata.transit('iquery');
                } else {
                  sails.log.info('[ Card ] Return data from cache.');
                  onSuccess(user.card);
                }
              }
            });
          } else {
            sails.log.info('[ Card ] Unknown login state. User: ' + option.username);
            onError(STATUS.UNKNOWN_RESPONSE);
          }
          sails.log.verbose(res.text);
        }
      })
    },
    iquery: {
      url: 'http://i.xmu.edu.cn/?.pn=p967_p1143',
      method: 'get',
      callback: ((err, res) => {
        if(err || !res.ok) {
          var status = STATUS.SERVER_FAILURE;
          if(err.timeout) {
            sails.log.info('[ Card ] Get iquery page timeout. ' + err);
            status = STATUS.TIMEOUT;
          } else {
            sails.log.info('[ Card ] Get iquery page failed. ' + err);
          }
          onError(status);
        } else {
          sails.log.silly(res.text);
          var result = res.text.match(/\d+(\.\d+)?元/);
          if(result && result[0]) {
            var card = {
              balance: result[0]
            };
            if(!_user) {
              // Ignore error
              onSuccess(card);
            } else {
              _user.card = card;
              onSuccess(card);
              _user.save();
            }
          } else { // Card balance not found
            sails.log.info('[ Card ] Unknown response at iquery.');
            onError(STATUS.UNKNOWN_RESPONSE);
          }
        }
      })
    },
  };
  automata.start('getSessionID');
};
