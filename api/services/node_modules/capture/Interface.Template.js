/**
 * Interface.Template
 *
 * @description :: Interface template file. Sample file name: GradeInterface.js
 */

const Convention = require('./Convention.js');
const STATUS = Convention.STATUS;
const DATA_TYPE = Convention.DATA_TYPE;
const CrawlAutomata = require('../CrawlAutomata.js');

/**
 * Some custom functions, codes, or some modules
 * NOTE: This is a node module, variables below are 'static'
 */

/**
 * Capture info
 * getSessionID: ['http://ssfw.xmu.edu.cn/cmstar/index.portal', 'get'],
 * login: ['http://ssfw.xmu.edu.cn/cmstar/userPasswordValidate.portal', 'post'],
 * main: ['http://ssfw.xmu.edu.cn/cmstar/index.portal?.pn=p1201_p3535', 'get']
 */

/**
 * @param {Object} option may contain username and password
 * @param {function} callback callback function. Prototype: function({result})
 */
module.exports = (option, callback) => {
  // Do something here
  // Capture and process data
  var agent = superagent.agent();
  function handler(err, res) {
    if(err || !res.ok) {
      var status = STATUS.SERVER_FAILURE;
      if(err.timeout) {
        sails.log.info('Get session id timeout. ' + err);
        status = STATUS.TIMEOUT;
      } else {
        sails.log.info('Get session id failed. ' + err);
      }
      callback(status);
    } else {
      sails.log.info('Session ID get');
      sails.log.verbose(res.text);
      automata.transit('login');
    }
  }
  agent
    .get(someUrl)
    .end(handler);
};